name: Automatic_Version

on:
  pull_request:
    types:
      - closed

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Determine Version
        id: determine_version
        run: |
          branch_name=$(jq -r .pull_request.head.ref $GITHUB_EVENT_PATH)
          version_type=""

          if [[ $branch_name == 'dev' ]]; then
            if [[ $branch_name == *feat/* ]]; then
              version_type="prerelease --preid=alpha"
            elif [[ $branch_name == *reintegrate/* ]]; then
              version_type="minor"
            fi
          elif [[ $branch_name == 'qa' ]]; then
            if [[ $branch_name == 'dev' ]]; then
              version_type="prerelease --preid=beta"
            elif [[ $branch_name == *fix/* ]]; then
              version_type="patch"
            fi
          elif [[ $branch_name == 'main' ]]; then
            if [[ $branch_name == 'qa' ]]; then
              version_type="minor"
            elif [[ $branch_name == *fix/* ]]; then
              version_type="patch"
            fi
          fi

          if [[ -n $version_type ]]; then
            new_version=$(npm --no-git-tag-version version $version_type)
            echo "::set-output name=new_version::$new_version"
          fi

      - name: Get New Version
        id: get_version
        run: echo "::set-output name=version::${{ steps.determine_version.outputs.new_version }}"

      - name: Commit and Push Version Update
        run: |
          base_branch=$(jq -r .pull_request.base.ref $GITHUB_EVENT_PATH)
          new_version=${{ steps.determine_version.outputs.new_version }}

          git fetch origin $base_branch:$base_branch || true
          git checkout $base_branch || true

          git add .
          git commit -m "Update version to $new_version" || true
          git tag -a $new_version -m "Version $new_version"
          git push origin $base_branch --follow-tags || true

